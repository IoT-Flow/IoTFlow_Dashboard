version: '3.8'

services:
  # Backend Service
  backend:
    build:
      context: ./iotflow-backend
      dockerfile: Dockerfile
    container_name: iotflow-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    env_file:
      - ./iotflow-backend/.env
    environment:
      - HOST=0.0.0.0
    volumes:
      - backend_data:/app/src
      - backend_logs:/app/logs
      - backend_uploads:/app/uploads
    networks:
      - iotflow-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service
  frontend:
    build:
      context: ./iotflow-frontend
      dockerfile: Dockerfile
    container_name: iotflow-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    env_file:
      - ./iotflow-frontend/.env
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - iotflow-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  backend_data:
    driver: local
  backend_logs:
    driver: local
  backend_uploads:
    driver: local

networks:
  iotflow-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
